---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVB4VzkvL0E5WElkYWVseTJJTFdpTG93RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TURreU9USXlNekl3TWxvWERUSTFNRGt5T0RJeQpNekl3TWxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFzcTM1S2Y1bnhTclFrQnlWQS8yYy82c3dRcXBFdUtnaFdNSnhXNGVFQWQ1WVRtU24KY3VhN0Fsc2xrVy90aUg4dG03UXVLQk1KcXd2Q3VJM1JQRmNVK2FGaDUvWDB2SEN5cUgwWVhkbUg1YUZycHgzcAo5YkU3VmpreGxxQ0ZWZnlVaTBvYVZWaHgwOFljVmJTbmd3Um9WMDgvTVRWU2RZL3VmcXVLeDFVRTJPa0I2UWZJCnBTbXhTS1BmR0VZVzl5eXJobG1TZk1uRkRaUHhrZGZLRS84c2g5T2ZoZldSTytPeGx4NW1OZVJGcmNTWTZoOG0KazlJV1Z2ZmhVbHZTM0JRMnpjelZrYm9uQ25IT29RMytkL09rK0xqcElkQ0h2bmwxeitVdzF3WFNJMmltNjVoYwpUQjBoR0xidnBkWWQxaXRXTFI0clFubDY1UXg2YjIybzZxL3NQd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGREZ5UEhwVyt4cTB3ZnlCRFFINUxpZkJja0hGTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlAzT1BRUXY0WUw4UVpIVWg2VjdldXV5VVlZeklZVDluZnJ0aVlBUFpQL1hIZTJDZFNITnNsClU5TFF3UlNLQnp6SWIxNnF1L0swSWVFOEJZcnZMWnRzSUJCL21MekFrNHhGZzgva1g1b29hbE5PaGhQajZsUnYKdG9TeVIzQWNwS05JNzhYMlhBYUtCRW1tRjhCQUVHcGxMRVQrVmo2SWs3OS9EeElwMGZWbzNDTnczUk5DQm8rMQpleTdYbXlld0NwZjNkbVQ5ZzQ5YjJ6UjdoNWhLQzZFeFF3M2VCcVE5ZnZPeTZqVm8yNnBQdnVoajFFU0wydUYwCjVJd0srNkNjYnc5a0dqZUwwMElIS2h3RWNYcXB3TVppbjdHT2lGWVlmUjRFdHlOUUdxRVJvRGlGTk15cEZRWWMKV2JxOEFFWWRtcFZNN2NET01uYWl6SE1sT3k2SkJJc1cKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBc3EzNUtmNW54U3JRa0J5VkEvMmMvNnN3UXFwRXVLZ2hXTUp4VzRlRUFkNVlUbVNuCmN1YTdBbHNsa1cvdGlIOHRtN1F1S0JNSnF3dkN1STNSUEZjVSthRmg1L1gwdkhDeXFIMFlYZG1INWFGcnB4M3AKOWJFN1Zqa3hscUNGVmZ5VWkwb2FWVmh4MDhZY1ZiU25nd1JvVjA4L01UVlNkWS91ZnF1S3gxVUUyT2tCNlFmSQpwU214U0tQZkdFWVc5eXlyaGxtU2ZNbkZEWlB4a2RmS0UvOHNoOU9maGZXUk8rT3hseDVtTmVSRnJjU1k2aDhtCms5SVdWdmZoVWx2UzNCUTJ6Y3pWa2JvbkNuSE9vUTMrZC9PaytManBJZENIdm5sMXorVXcxd1hTSTJpbTY1aGMKVEIwaEdMYnZwZFlkMWl0V0xSNHJRbmw2NVF4NmIyMm82cS9zUHdJREFRQUJBb0lCQUM2NlJxWVB6UzJJQStFYwpTSEF4dkFRMHpic3hjaVZrZXN3T2xieWRGUTIwQ3gzOVBybFMwK2RLMU9sUy95aXFNZEE5YjdDMVFkc0VpVmpnClphN0ZDMHc1UXpSNVl4YUExb2d2cHRhc1U5amV2UnVJUEM0dnVsZlRQeitvSFJhZXBtNUM0OTRiOGpDeTU2Z1cKUlpTQzY1S2h1K0h2a3ZBQnd4cEhYRlRDekRDNVZ3Y2NMR3liMEk5Tklqejc0NUMwOWdNNjNkTktDS3orT242SQpuSkRaN1pxSDhZOGJrTXhiSS9kK25ySEhvbXN2MWczaCsxTEF2eXFGTjFpWFJndUtzQ3FuZ04yY0lQd1RHbG1tCjc3ODU3SVg2UUdxWTJjVnFkUVYrZVJJTkdOMmRjMXRBZW5wQ0s2RVhXLzJoRGVBeWw0U0dEL1UraTJ0bTRRc0sKZ2pqYVpORUNnWUVBM0cvZjhhYlpiY1o4bTRKV0RiT1RRbVNPaEJ1cnNvY0tPYjl2cFJHdFlXYjBUQnV2NlRnVQp4cTVOV0JIS0o0NGY2WGs5SWNuaGYyZzNreVBIWmIrMWN4TlZWL015YXhVN3JPczdOa3lxVnJrTFZkSVVydWZvClMyN0Fra0FHTUpId0N0RWU0YjQrWDZZSzVlUzU4SmNqWlF2cG10ajlsNVBkelg3TUdLcmNteWNDZ1lFQXo0R0EKa2h2UFY3TjZta3FjS0kvK0dtWFl1UEJzRmxXQWtjdndDWUR5Qnd3dFIzTTNvZFVPclhOTkJ1ZmJnQVY0Yko1TwpDYTFWd2N3RWhmVmM3VWtNd0dSemhsTmViT1VYN0YvK0tzT0dxMW5DeDVlWEdPWE1qKzlObU92RzE5S1hKQXYxCllmVVdoQmxaeTZIL0N1cjlmWkFTWGVnUW5oM0FOa2k0TUVwa05Ta0NnWUF6TnFLMngrYllCRGRMQWRyd1QvbzAKZ0p4RHdSSUE1akxQKzlQNmE4TDJVQzhOeDVqMC9CeUhsRk5QMU1JOHNsNWpwZEU0R21rVGFxa092RTlGS21jRApsMGhLcUt2Y0NSRFdPY2lGOHdYWUpDR29ES2pWZ2ZlTUh1MEtqV2xpdTJVamZqWklpQ1NCb0ZnRDFVSUZ6WGRoCnNJVFRmdnBienZUSEcyQmJrc2F5SFFLQmdGSXdjeUpzRFhZcFNyaHVNT2dJRUplWUczMDFEVHJUWnZkWWxaek8KREE4cWpZeXRZQzJqWEFycmptamIwUjhtQzRyS01SSzRLeTExaDUwZmtFMFVFQTdzT3EzTHU2emFHTjJ4TDlUMApXUlRwbXJLL29rTmtVZC80NHYxYzlnZHFEQjlrOVM1MWl4T0xqdnVQRUp2Y2M4Y1dGNUJHYUw2WC9oZ0NPYUkyCjlQWHhBb0dBQ3RhSUpRaUxRcGM2Y3J0ZHExVE9iQ3UrbFV4enQ5SzdlcDlodXE4RjQ1ZDZUTHhUdFFPNFpZd0UKeGQrcHBmWUJaQUVaVEdMaE1WdU1ta2ZaRTdWOHgydFErQUpjaHJPWFFKcEhzcVgwM0JJdDhUejJ3SndRQk8wWAp3OHYyWFo2b0VYcUkxQzBxeDZOMStWMlFIUjVGcW0reUdIVHJ0dHk4UEhCVEpINkZoVGs9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVB4VzkvL0E5WElkYWVseTJJTFdpTG93RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TURreU9USXlNekl3TWxvWERUSTFNRGt5T0RJeQpNekl3TWxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFzcTM1S2Y1bnhTclFrQnlWQS8yYy82c3dRcXBFdUtnaFdNSnhXNGVFQWQ1WVRtU24KY3VhN0Fsc2xrVy90aUg4dG03UXVLQk1KcXd2Q3VJM1JQRmNVK2FGaDUvWDB2SEN5cUgwWVhkbUg1YUZycHgzcAo5YkU3VmpreGxxQ0ZWZnlVaTBvYVZWaHgwOFljVmJTbmd3Um9WMDgvTVRWU2RZL3VmcXVLeDFVRTJPa0I2UWZJCnBTbXhTS1BmR0VZVzl5eXJobG1TZk1uRkRaUHhrZGZLRS84c2g5T2ZoZldSTytPeGx4NW1OZVJGcmNTWTZoOG0KazlJV1Z2ZmhVbHZTM0JRMnpjelZrYm9uQ25IT29RMytkL09rK0xqcElkQ0h2bmwxeitVdzF3WFNJMmltNjVoYwpUQjBoR0xidnBkWWQxaXRXTFI0clFubDY1UXg2YjIybzZxL3NQd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGREZ5UEhwVyt4cTB3ZnlCRFFINUxpZkJja0hGTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlAzT1BRUXY0WUw4UVpIVWg2VjdldXV5VVlZeklZVDluZnJ0aVlBUFpQL1hIZTJDZFNITnNsClU5TFF3UlNLQnp6SWIxNnF1L0swSWVFOEJZcnZMWnRzSUJCL21MekFrNHhGZzgva1g1b29hbE5PaGhQajZsUnYKdG9TeVIzQWNwS05JNzhYMlhBYUtCRW1tRjhCQUVHcGxMRVQrVmo2SWs3OS9EeElwMGZWbzNDTnczUk5DQm8rMQpleTdYbXlld0NwZjNkbVQ5ZzQ5YjJ6UjdoNWhLQzZFeFF3M2VCcVE5ZnZPeTZqVm8yNnBQdnVoajFFU0wydUYwCjVJd0srNkNjYnc5a0dqZUwwMElIS2h3RWNYcXB3TVppbjdHT2lGWVlmUjRFdHlOUUdxRVJvRGlGTk15cEZRWWMKV2JxOEFFWWRtcFZNN2NET01uYWl6SE1sT3k2SkJJc1cKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBc3EzNUtmNW54U3JRa0J5VkEvMmMvNnN3UXFwRXVLZ2hXTUp4VzRlRUFkNVlUbVNuCmN1YTdBbHNsa1cvdGlIOHRtN1F1S0JNSnF3dkN1STNSUEZjVSthRmg1L1gwdkhDeXFIMFlYZG1INWFGcnB4M3AKOWJFN1Zqa3hscUNGVmZ5VWkwb2FWVmh4MDhZY1ZiU25nd1JvVjA4L01UVlNkWS91ZnF1S3gxVUUyT2tCNlFmSQpwU214U0tQZkdFWVc5eXlyaGxtU2ZNbkZEWlB4a2RmS0UvOHNoOU9maGZXUk8rT3hseDVtTmVSRnJjU1k2aDhtCms5SVdWdmZoVWx2UzNCUTJ6Y3pWa2JvbkNuSE9vUTMrZC9PaytManBJZENIdm5sMXorVXcxd1hTSTJpbTY1aGMKVEIwaEdMYnZwZFlkMWl0V0xSNHJRbmw2NVF4NmIyMm82cS9zUHdJREFRQUJBb0lCQUM2NlJxWVB6UzJJQStFYwpTSEF4dkFRMHpic3hjaVZrZXN3T2xieWRGUTIwQ3gzOVBybFMwK2RLMU9sUy95aXFNZEE5YjdDMVFkc0VpVmpnClphN0ZDMHc1UXpSNVl4YUExb2d2cHRhc1U5amV2UnVJUEM0dnVsZlRQeitvSFJhZXBtNUM0OTRiOGpDeTU2Z1cKUlpTQzY1S2h1K0h2a3ZBQnd4cEhYRlRDekRDNVZ3Y2NMR3liMEk5Tklqejc0NUMwOWdNNjNkTktDS3orT242SQpuSkRaN1pxSDhZOGJrTXhiSS9kK25ySEhvbXN2MWczaCsxTEF2eXFGTjFpWFJndUtzQ3FuZ04yY0lQd1RHbG1tCjc3ODU3SVg2UUdxWTJjVnFkUVYrZVJJTkdOMmRjMXRBZW5wQ0s2RVhXLzJoRGVBeWw0U0dEL1UraTJ0bTRRc0sKZ2pqYVpORUNnWUVBM0cvZjhhYlpiY1o4bTRKV0RiT1RRbVNPaEJ1cnNvY0tPYjl2cFJHdFlXYjBUQnV2NlRnVQp4cTVOV0JIS0o0NGY2WGs5SWNuaGYyZzNreVBIWmIrMWN4TlZWL015YXhVN3JPczdOa3lxVnJrTFZkSVVydWZvClMyN0Fra0FHTUpId0N0RWU0YjQrWDZZSzVlUzU4SmNqWlF2cG10ajlsNVBkelg3TUdLcmNteWNDZ1lFQXo0R0EKa2h2UFY3TjZta3FjS0kvK0dtWFl1UEJzRmxXQWtjdndDWUR5Qnd3dFIzTTNvZFVPclhOTkJ1ZmJnQVY0Yko1TwpDYTFWd2N3RWhmVmM3VWtNd0dSemhsTmViT1VYN0YvK0tzT0dxMW5DeDVlWEdPWE1qKzlObU92RzE5S1hKQXYxCllmVVdoQmxaeTZIL0N1cjlmWkFTWGVnUW5oM0FOa2k0TUVwa05Ta0NnWUF6TnFLMngrYllCRGRMQWRyd1QvbzAKZ0p4RHdSSUE1akxQKzlQNmE4TDJVQzhOeDVqMC9CeUhsRk5QMU1JOHNsNWpwZEU0R21rVGFxa092RTlGS21jRApsMGhLcUt2Y0NSRFdPY2lGOHdYWUpDR29ES2pWZ2ZlTUh1MEtqV2xpdTJVamZqWklpQ1NCb0ZnRDFVSUZ6WGRoCnNJVFRmdnBienZUSEcyQmJrc2F5SFFLQmdGSXdjeUpzRFhZcFNyaHVNT2dJRUplWUczMDFEVHJUWnZkWWxaek8KREE4cWpZeXRZQzJqWEFycmptamIwUjhtQzRyS01SSzRLeTExaDUwZmtFMFVFQTdzT3EzTHU2emFHTjJ4TDlUMApXUlRwbXJLL29rTmtVZC80NHYxYzlnZHFEQjlrOVM1MWl4T0xqdnVQRUp2Y2M4Y1dGNUJHYUw2WC9oZ0NPYUkyCjlQWHhBb0dBQ3RhSUpRaUxRcGM2Y3J0ZHExVE9iQ3UrbFV4enQ5SzdlcDlodXE4RjQ1ZDZUTHhUdFFPNFpZd0UKeGQrcHBmWUJaQUVaVEdMaE1WdU1ta2ZaRTdWOHgydFErQUpjaHJPWFFKcEhzcVgwM0JJdDhUejJ3SndRQk8wWAp3OHYyWFo2b0VYcUkxQzBxeDZOMStWMlFIUjVGcW0reUdIVHJ0dHk4UEhCVEpINkZoVGs9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVB4VzkvL0E5WElkYWVseTJJTFdpTG93RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TURreU9USXlNekl3TWxvWERUSTFNRGt5T0RJeQpNekl3TWxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFzcTM1S2Y1bnhTclFrQnlWQS8yYy82c3dRcXBFdUtnaFdNSnhXNGVFQWQ1WVRtU24KY3VhN0Fsc2xrVy90aUg4dG03UXVLQk1KcXd2Q3VJM1JQRmNVK2FGaDUvWDB2SEN5cUgwWVhkbUg1YUZycHgzcAo5YkU3VmpreGxxQ0ZWZnlVaTBvYVZWaHgwOFljVmJTbmd3Um9WMDgvTVRWU2RZL3VmcXVLeDFVRTJPa0I2UWZJCnBTbXhTS1BmR0VZVzl5eXJobG1TZk1uRkRaUHhrZGZLRS84c2g5T2ZoZldSTytPeGx4NW1OZVJGcmNTWTZoOG0KazlJV1Z2ZmhVbHZTM0JRMnpjelZrYm9uQ25IT29RMytkL09rK0xqcElkQ0h2bmwxeitVdzF3WFNJMmltNjVoYwpUQjBoR0xidnBkWWQxaXRXTFI0clFubDY1UXg2YjIybzZxL3NQd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGREZ5UEhwVyt4cTB3ZnlCRFFINUxpZkJja0hGTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlAzT1BRUXY0WUw4UVpIVWg2VjdldXV5VVlZeklZVDluZnJ0aVlBUFpQL1hIZTJDZFNITnNsClU5TFF3UlNLQnp6SWIxNnF1L0swSWVFOEJZcnZMWnRzSUJCL21MekFrNHhGZzgva1g1b29hbE5PaGhQajZsUnYKdG9TeVIzQWNwS05JNzhYMlhBYUtCRW1tRjhCQUVHcGxMRVQrVmo2SWs3OS9EeElwMGZWbzNDTnczUk5DQm8rMQpleTdYbXlld0NwZjNkbVQ5ZzQ5YjJ6UjdoNWhLQzZFeFF3M2VCcVE5ZnZPeTZqVm8yNnBQdnVoajFFU0wydUYwCjVJd0srNkNjYnc5a0dqZUwwMElIS2h3RWNYcXB3TVppbjdHT2lGWVlmUjRFdHlOUUdxRVJvRGlGTk15cEZRWWMKV2JxOEFFWWRtcFZNN2NET01uYWl6SE1sT3k2SkJJc1cKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUo1RnVpeHl2S2JyZ01HaVpnNEY0OVV3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TURreU9USXlNekl3TWxvWERUSTFNRGt5T0RJeQpNekl3TWxvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTJBbHgyZUZPM1RYVkRoWm1WeHlyaW0wSDV2ai8KWm90KzlWM0pPMTN6eE5kZ1pXNzdtWjZpclV1RkIzWFNha0R2K0hhelRoZXlDMGFhZ3FOVk5ZY2VUVE5CNTYxTwprSmMvam1Vem1uTlY0M0RpTVMzSkN0ODArUzdJNzRVV2FlQUJZV3lXTDB4a0lySEhXWkE0bDI4clo5T3djZW5mCmVYL0FXdzAra0xyRnhsRFRZaG1GQ0tCNUJncG1QcTcwSzd0Qk51TEtYVS8rKzljaklybTZndzB4a0ovbkVURHkKek1hUDJJOUVhUTNRUUtncFFPazQ1TXo5TWVqOXJGZkE2ZVhDMHFqOVVPN0tNMTRiSi9wT1ZMK1ZKYUdWdGhJUwp3RVk2L25tNG0xcStsWEowVW5qV0FjeVptWEE0VHN0YXp4VXJ5S3ZkcDlyeUhySDJJcFFtUHgzTktRSURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUXhjang2VnZzYXRNSDhnUTBCK1M0bgp3WEpCeFRBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBQk9XVGtmR0N0Vnd1cnIxYnRhQXFmLzJNb2I2Q0tteGhPei9URDFvTExwWk9hNHQKQmZ4Q2F2cnpyY0VkZENMK2U5UEYzUEdLTnFUR3VaSnlLTWdMeE8zTXR3SFE5VDFmUGdDTjJQSEZlRnV0cUlwawpHY3RTb3kwTmpEUnJtbWdmTGhvdXhZZ0p4TGgrZlcxTnZZbzk5akRwOWtHdEhSKzF3Rit6RXRpMmduR3NqTkNLClozSWphb2NFS1d2cXpvZitQMTMrQk9DR21nbGoySHFkL2hxMFh0TmwyT3daWFBMWkJuRWJsUlg1eHpaYkN4UlMKaGNLWUlpVmxvR3RyQTNCbEhLbTB3bk9ZQmxjNzBUd3BUcnF1aC85d0NZV3BqcG5zYWQwaWtxcHZXc2R1dTRKVgpyeU5yK1FuY3RnWncvZGJtcVJTakJuZ0F3WFRwUlBpaGZJYVB4RVE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBMkFseDJlRk8zVFhWRGhabVZ4eXJpbTBINXZqL1pvdCs5VjNKTzEzenhOZGdaVzc3Cm1aNmlyVXVGQjNYU2FrRHYrSGF6VGhleUMwYWFncU5WTlljZVRUTkI1NjFPa0pjL2ptVXptbk5WNDNEaU1TM0oKQ3Q4MCtTN0k3NFVXYWVBQllXeVdMMHhrSXJISFdaQTRsMjhyWjlPd2NlbmZlWC9BV3cwK2tMckZ4bERUWWhtRgpDS0I1QmdwbVBxNzBLN3RCTnVMS1hVLysrOWNqSXJtNmd3MHhrSi9uRVREeXpNYVAySTlFYVEzUVFLZ3BRT2s0CjVNejlNZWo5ckZmQTZlWEMwcWo5VU83S00xNGJKL3BPVkwrVkphR1Z0aElTd0VZNi9ubTRtMXErbFhKMFVualcKQWN5Wm1YQTRUc3RhenhVcnlLdmRwOXJ5SHJIMklwUW1QeDNOS1FJREFRQUJBb0lCQUZXRDk1TTlncEJCL09JawpyOElQMFQ5c1JWS0NnZWEvbFRQZk9nYkwrL0NSS05FK0MwNFY0Mk1objdrQ1JKWld1aWJxSmJQbDRVNWhWa3djCkIyQzI2YUc1aG44RXRUSzdEQ2Q3bTkrcGcvZ1IrUmRxZmtoVmJveXNubEZocHl1bHhpWWdhNXF4YkhublVYZjgKaE1vODhUdWFLaUFOYWE2WWlUWUJtaUNFTGtGL2h0dG9LVDJTV2RzTUVyZG83cWNhTHJwWHgveXp1Mlgvc0hKVQpyTzI3ajZiTFlHTE1lcTRaQUx2b2lGZjR0aFI2QnNtOTgyek8wQlEwbUxnV3NCSThMR2JPMkxsRCtzQS9aK1JpCm1CdERSa0tuWEV0cFJQZFJiWDcxSys4NmozWDIvVTcwMGgzTTc1RytFdVV1SUwrL2JieVZDVTRHTVRnSWlJR3UKSVpKa1F3RUNnWUVBN2VzTExOTWorOTN6azFxMDBxMVVaZHBhdSt2RVBnSitpUVJFdXBaMVdlUjZ0aUxlN2RmbApJd3AxRDNkeWJWcEVQWE9mZGJqWjUxcWxVYlJNQnNSMWxGWUdRa1F4cVBkN05PclkycC9OYkRHMGc0bVRsd2hPCjROWmlyQzBkWGVDZTUyMElXQjNHNGUrZ3F1Q1JKc1BuNUlyZ3NLcU1Fb1JKQ1ZpbVpEUGw2cmtDZ1lFQTZIU3QKZU9VYXJtZVo5RThySjcvMUtGUDEvQXRrdHQ4bEx6b09uV3FHbm1UakVCRjJWdUJibjh0M0Jqa1AxSWV4djZ4NgpvMFV3b2xxQkdoSTQxOExwZVkzZmRzZmFIMUU0UWZTaVluVnJ1SVFCU3BlbG5lQmMxQkJyYVo4a09oUEE4amtlCnhkTFNWSXB1K2UyMng1MEwzcWlQUWVFNmJ4K2g4Qm8xdVZyTC9mRUNnWUVBbVcxRTVLQTRpVmtsbGJZZCsrcXAKRFpIVmgzQlFPa2p6ZnJxUTg5N0pTTElON0Z6cWRHa1FyQnMzU0VVWU5xcktiUEtlTjVXQWVEQzlnY1lLYlNiTwpTRjE5WmNpQ1dkdFd5ZFpWQ0ErYnNwVVBPdkJDakZoZ1BhQWpPN05RUjlUdHhJSk1xajV4bmd3aENYRU9TZmgyCkY2enpueG9zZ0Zoc25TbGREQ3Rucm9rQ2dZRUEwbUwvdW1LSTRuNkwzWTFsdnFWQ3lvd3JIMEprbGdxaWlmcmUKeldSamtLbzR4QXM1OHVrK3BBS3ZxQ2N2QjZrRW5Ea01DZ2VPTy9MejA5ZllNSmVOWG1Ha2RjbnR4ZGhwdFhBbgpKRHVvRWlrUFRpYXdVNUtFRWI4R3FHTExrL0RhK1ovdkZSWjVIT0RxRGpReThMbFh5OTc5UWFBS2xoYW9KenBoCmsyLzFIdEVDZ1lFQXhXUHkwYzdZMzlXVVdkL0hwV2o4UWJ0Tzh3R2ovdE10Zm9QQUtLcUFBVGNSclJpS3hhRVgKYkhaU1hjNk1FMlhBb0lNQWJtTlR0bnNXODRTbU8zS2NQWkJoZFNKRjl3Mk1rYW41dTFvdTI2YVVqbG9BenhPUQpzQ3BMM2JvQ0lKYkhZdVRkRUxmSmNRV1gzVWlmbWYyWmlHU3RHNmEzRm1UYVhySlZzbDFQbzc0PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVB4VzkvL0E5WElkYWVseTJJTFdpTG93RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TURreU9USXlNekl3TWxvWERUSTFNRGt5T0RJeQpNekl3TWxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFzcTM1S2Y1bnhTclFrQnlWQS8yYy82c3dRcXBFdUtnaFdNSnhXNGVFQWQ1WVRtU24KY3VhN0Fsc2xrVy90aUg4dG03UXVLQk1KcXd2Q3VJM1JQRmNVK2FGaDUvWDB2SEN5cUgwWVhkbUg1YUZycHgzcAo5YkU3VmpreGxxQ0ZWZnlVaTBvYVZWaHgwOFljVmJTbmd3Um9WMDgvTVRWU2RZL3VmcXVLeDFVRTJPa0I2UWZJCnBTbXhTS1BmR0VZVzl5eXJobG1TZk1uRkRaUHhrZGZLRS84c2g5T2ZoZldSTytPeGx4NW1OZVJGcmNTWTZoOG0KazlJV1Z2ZmhVbHZTM0JRMnpjelZrYm9uQ25IT29RMytkL09rK0xqcElkQ0h2bmwxeitVdzF3WFNJMmltNjVoYwpUQjBoR0xidnBkWWQxaXRXTFI0clFubDY1UXg2YjIybzZxL3NQd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGREZ5UEhwVyt4cTB3ZnlCRFFINUxpZkJja0hGTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlAzT1BRUXY0WUw4UVpIVWg2VjdldXV5VVlZeklZVDluZnJ0aVlBUFpQL1hIZTJDZFNITnNsClU5TFF3UlNLQnp6SWIxNnF1L0swSWVFOEJZcnZMWnRzSUJCL21MekFrNHhGZzgva1g1b29hbE5PaGhQajZsUnYKdG9TeVIzQWNwS05JNzhYMlhBYUtCRW1tRjhCQUVHcGxMRVQrVmo2SWs3OS9EeElwMGZWbzNDTnczUk5DQm8rMQpleTdYbXlld0NwZjNkbVQ5ZzQ5YjJ6UjdoNWhLQzZFeFF3M2VCcVE5ZnZPeTZqVm8yNnBQdnVoajFFU0wydUYwCjVJd0srNkNjYnc5a0dqZUwwMElIS2h3RWNYcXB3TVppbjdHT2lGWVlmUjRFdHlOUUdxRVJvRGlGTk15cEZRWWMKV2JxOEFFWWRtcFZNN2NET01uYWl6SE1sT3k2SkJJc1cKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRTS9zeFdSVVRhUXlDeGVFTXJ3anczakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nakl3T1RJNU1qSXpNakF5V2hjTk1qVXdPVEk0TWpJegpNakF5V2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBeWFURmJjZlJDSWtmZDlRZGZMUkcKVHlYYjdWQklmNnl3N3hjRDNCYUdOQ2FsYTNadzZqOVp1S2tXOHFSTnorT0xLazFMNENSVFEwSm9aSmFKdG80KwprbDdQc1E2TjJyeXRtUmNveHNpclJ5dyt1WGRzc0xSMGc5QTJvTlV6RFVydlpHWTV2SWxyZC9JQ25HTlFIYlB2ClJLNkRvcEdYWFc3ay80NGtEclJjSlcwM2NxdWZFeXFKUkpRQWhnVUZiWnkvQjFtYStWOUZuT3VNajlEamdOVXcKSTVLMEZJTjV0cVMyV1ZRRjhsZVhyRGJFVkhsU1FZZWtBTnhDNTE5cHNLUWR3WEhrQ1VuUmppVkJhWFU1MVpqUQpSZHYvajBieGhNUXl2MjQ1ZlN6a0lRSkwwY1JTeCtkeHVJL3dSSzdQMlFrVGgxdXNFOXZZYitaMnBod1hIcVFrCmpRSURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JReGNqeDZWdnNhdE1IOApnUTBCK1M0bndYSkJ4VEFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBNkJ6ekxjQ2ZmNzNHbWVSK3k2c2RjUTRSN3hKNnUKbHNCVzVNY0haUXZuWjdHK3JQbFVObWN4bWd6TFdsQ0wzUkd5Z1ZCL2w1SVRqUUtpenhWTi9vQnBUTFZUV2dFbgpOcWw5bmhZVEo4enFwK0tiY0JZRi80bmRJaStWbWZoSmNubGhiaHdsMy84dkU4RVpHcGNodnpNczBpc1FlZFNPCnFyUUVCM3NmUmp0clRObGwvRFhUNHJIVVhLb1hpTkQyNW8zQnpUUDVzejkxL1AvUEhaTlhwVVMxNWVGZkxIZUkKY081T3pWNDNmcDN6c2pFbWNkQU9Wc1NWWkREUVQ3SUhYRi9QcUtaY055Slp4T1ZVaWxxSjQzazhCRTJ2MnBEWQpFS1hsTjFXRk1JK1VnUlRUbVpzb0FWaGRPR05ZRHRtMnRZZkRGc0phbWVzTzh4TFkrd2N1UWNGSAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeWFURmJjZlJDSWtmZDlRZGZMUkdUeVhiN1ZCSWY2eXc3eGNEM0JhR05DYWxhM1p3CjZqOVp1S2tXOHFSTnorT0xLazFMNENSVFEwSm9aSmFKdG80K2tsN1BzUTZOMnJ5dG1SY294c2lyUnl3K3VYZHMKc0xSMGc5QTJvTlV6RFVydlpHWTV2SWxyZC9JQ25HTlFIYlB2Uks2RG9wR1hYVzdrLzQ0a0RyUmNKVzAzY3F1ZgpFeXFKUkpRQWhnVUZiWnkvQjFtYStWOUZuT3VNajlEamdOVXdJNUswRklONXRxUzJXVlFGOGxlWHJEYkVWSGxTClFZZWtBTnhDNTE5cHNLUWR3WEhrQ1VuUmppVkJhWFU1MVpqUVJkdi9qMGJ4aE1ReXYyNDVmU3prSVFKTDBjUlMKeCtkeHVJL3dSSzdQMlFrVGgxdXNFOXZZYitaMnBod1hIcVFralFJREFRQUJBb0lCQUdsSFR4RVBOM00yYktpYQpwYjZiUE81TC9QUjlheXpGMUNjd3BBSS8vRmUwS2IvZXVmdURrZXVZMVBOZ2w0UEg4THZvV1lvd1RReWIybmRTCkpacWJ6ODJLRlBRRGZrckxJZlFCSkhnTkEyZ0lrTU15dUJ2V1M5TWFYYnRCTlFObXNYQ0E4dm9kNFc5aGVyMSsKR0xFNVpkNDlJMXM0bW9mY3cxRXVQR00xQmJzL3lYNlhRTStlTXc3ckM2K2hEQ1d5aCtqUjBvQ3VoTHZnWlVSQQpPbjFqY2dqMHNYU0FERzhnelVRNjUyRFVqdEVZWFM1QktUOTlxbUZwQ05heDMrSDFjaUdxeFhsVldRczBaT1dxCkxPeU4wVE52YmJHNHNzU250SFA4SWk5Sm9LMW9VRGNiMmZXTXNJYUVUNmYwNHMxazdMaWFtOXpmWFRhSjRNNUIKYnRyMHJKMENnWUVBK0F0V1NwZ3JiUjhwUzR3VGFoc1NhMnZyT2Iyb0VkTUZwZE9SOG55MTc5enUzMDVFcEkzYQpQTEgrYnh6Uk1kR3RrQzY0cmhhQlhySzhjbjV3dUtyYktmWHJYSjRWRXc2L3ZQT29mdEtrZVNNQ1VoOHhRd2xvCkN5U1BQTVB2bmt4NlpBYUZwVzY3UjNVM1FDNFhWVjdZOUNvRVNNN3VNazFLNjNVNHF4NitHT3NDZ1lFQTBCeHgKbTVDTy8rcStyeDdoK3EyWU5VQmR6RXl2RXZpYzBjSm9OR3ZYUUh0Lys4S0g0R2tTVTMxTkUvZUR3SUwwUzB4dwpCN1RwZ3g0N0puVmdaTG5TT3BuQ0dybHpXUXkyNFRXNTZzNXhUdk1GMXp5Ym9TdGE0N1lSNmVHeHNBd05aMDdtCkxSSis4dmpZWkJvOUcvZUQ3SHBXZXArVzRpMGVYM21BNnVEUTJtY0NnWUVBdUpPM0lzc1poWm9xb0kwYjVWay8KMjYveTJvVEhESHg3TjJxNHNEa2RLZUM5NEczZHBwWG9VRUlqazR0ZUlEUm5jMk5SQ2pxMUNrTDIrRHdlcFV4Kwp5anExYWJZNCtIV0JPSm9ZU0VkM0hLMXdqS3VwZkxrRE0wZUJUelorbU0xUVJoNlVWUWFSVmh0amdkN0tmanlXCk5Sc1BGUjduSVlkaXVOUUIxMVNKSVFFQ2dZQVpUSXZuREhERjNhU21wMHR6Yk8wRzlEY3k0ZE9hcTh4c2w0U1IKY3RhdENSWnE1YUFkQU1qd2kxZjJhRzJFMXFhYURNWEZ1aEYxRmhTOHZTSWx2STA1QUg0ZlA1SXRMaVdCUlVXLwpySzhMbVBHSjA5MWJmMmpDSzkwTG9KczRPbzdha3pYYUh0aDk4eEJqUXVsUTRBc1NrV0MzOFhTbk5ETHdDbFpJCnQySE1Xd0tCZ0dGM0Nrd1NScU1oQ1Z6OE03R0JwaWdzdDhleHV4UXdkc1FUMytNbVJJMzFONmx0RldTdXlaclUKZnBHbEJFTFAyS1VUVFd6ZEkyL244d1FFeU9lNzRTUTdvSnphM0dlNnI4RnlZTTZHQURwdFlHdU9RbzVzUkNvMgpqSU1hSXNteHN4YjBUU0Z4b0dSaDZUaWtsTDZQdGRoYURvTHJLcnhVYUNrcUxzMjVjQ2pjCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  # Disable the usage of CiliumEndpoint CRD
  disable-endpoint-crd: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/policy/intro/#policy-enforcement-modes
  enable-policy: "default"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: 5s

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0) of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  # bpf-lb-bypass-fib-lookup instructs Cilium to enable the FIB lookup bypass
  # optimization for nodeport reverse NAT handling.
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "0"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: "vxlan"
  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv6-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "partial"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-host-port: "false"
  enable-external-ips: "false"
  enable-node-port: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # Address to expose Hubble metrics (e.g. ":7070"). Metrics server will be disabled if this
  # field is not set.
  hubble-metrics-server: ":9965"
  # A space separated list of metrics to enable. See [0] for available metrics.
  #
  # https://github.com/cilium/hubble/blob/master/Documentation/metrics.md
  hubble-metrics:
    dns:query;ignoreAAAA
    drop
    tcp
    flow
    icmp
    http
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "kubernetes"
  disable-cnp-status-updates: "true"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "false"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: default
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    dial-timeout:
    retry-timeout:
    sort-buffer-len-max:
    sort-buffer-drain-timeout:
    tls-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n\n        location / {\n            try_files $uri $uri/ /index.html;\n        }\n    }\n}"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumbgploadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumegressnatpolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumbgploadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumegressnatpolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-metrics
  namespace: kube-system
  labels:
    k8s-app: hubble
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9965"
spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/cilium-configmap-checksum: "d623a4437cc1f063815cf99a6610fa67511fd19db77dc1d56cce55ee0f442808"
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: "unconfined"
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: "unconfined"
      labels:
        k8s-app: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.12.2@sha256:986f8b04cfdb35cf714701e58e35da0ee63da2b8a048ab596ccb49de58d5ba36"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cni-chaining-mode
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: custom-cni-conf
              optional: true
        lifecycle:
          postStart:
            exec:
              command:
              - "/cni-install.sh"
              - "--enable-debug=false"
              - "--cni-exclusive=true"
              - "--log-file=/var/run/cilium/cilium-cni.log"
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        ports:
        - name: peer-service
          containerPort: 4244
          hostPort: 4244
          protocol: TCP
        - name: hubble-metrics
          containerPort: 9965
          hostPort: 9965
          protocol: TCP
        securityContext:
          seLinuxOptions:
            level: 's0'
            # Running with spc_t since we have removed the privileged mode.
            # Users can change it to a different type as long as they have the
            # type available on the system.
            type: 'spc_t'
          capabilities:
            add:
              # Use to set socket permission
              - CHOWN
              # Used to terminate envoy child process
              - KILL
              # Used since cilium modifies routing tables, etc...
              - NET_ADMIN
              # Used since cilium creates raw sockets, etc...
              - NET_RAW
              # Used since cilium monitor uses mmap
              - IPC_LOCK
              # Used in iptables. Consider removing once we are iptables-free
              - SYS_MODULE
              # We need it for now but might not need it for >= 5.11 specially
              # for the 'SYS_RESOURCE'.
              # In >= 5.8 there's already BPF and PERMON capabilities
              - SYS_ADMIN
              # Could be an alternative for the SYS_ADMIN for the RLIMIT_NPROC
              - SYS_RESOURCE
              # Both PERFMON and BPF requires kernel 5.8, container runtime
              # cri-o >= v1.22.0 or containerd >= v1.5.0.
              # If available, SYS_ADMIN can be removed.
              #- PERFMON
              #- BPF
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: cni-path
          mountPath: /host/opt/cni/bin
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
      initContainers:
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.12.2@sha256:986f8b04cfdb35cf714701e58e35da0ee63da2b8a048ab596ccb49de58d5ba36"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "$BIN_PATH/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: 's0'
            # Running with spc_t since we have removed the privileged mode.
            # Users can change it to a different type as long as they have the
            # type available on the system.
            type: 'spc_t'
          capabilities:
            drop:
              - ALL
            add:
              # Only used for 'mount' cgroup
              - SYS_ADMIN
              # Used for nsenter
              - SYS_CHROOT
              - SYS_PTRACE
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.12.2@sha256:986f8b04cfdb35cf714701e58e35da0ee63da2b8a048ab596ccb49de58d5ba36"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "$BIN_PATH/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: 's0'
            # Running with spc_t since we have removed the privileged mode.
            # Users can change it to a different type as long as they have the
            # type available on the system.
            type: 'spc_t'
          capabilities:
            drop:
              - ALL
            add:
              # Required in order to access host's /etc/sysctl.d dir
              - SYS_ADMIN
              # Used for nsenter
              - SYS_CHROOT
              - SYS_PTRACE
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.12.2@sha256:986f8b04cfdb35cf714701e58e35da0ee63da2b8a048ab596ccb49de58d5ba36"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.12.2@sha256:986f8b04cfdb35cf714701e58e35da0ee63da2b8a048ab596ccb49de58d5ba36"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: 's0'
            # Running with spc_t since we have removed the privileged mode.
            # Users can change it to a different type as long as they have the
            # type available on the system.
            type: 'spc_t'
          capabilities:
            # Most of the capabilities here are the same ones used in the
            # cilium-agent's container because this container can be used to
            # uninstall all Cilium resources, and therefore it is likely that
            # will need the same capabilities.
            add:
              # Used since cilium modifies routing tables, etc...
              - NET_ADMIN
              # Used in iptables. Consider removing once we are iptables-free
              - SYS_MODULE
              # We need it for now but might not need it for >= 5.11 specially
              # for the 'SYS_RESOURCE'.
              # In >= 5.8 there's already BPF and PERMON capabilities
              - SYS_ADMIN
              # Could be an alternative for the SYS_ADMIN for the RLIMIT_NPROC
              - SYS_RESOURCE
              # Both PERFMON and BPF requires kernel 5.8, container runtime
              # cri-o >= v1.22.0 or containerd >= v1.5.0.
              # If available, SYS_ADMIN can be removed.
              #- PERFMON
              #- BPF
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        secret:
          secretName: cilium-clustermesh
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          optional: true
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/cilium-configmap-checksum: "d623a4437cc1f063815cf99a6610fa67511fd19db77dc1d56cce55ee0f442808"
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: quay.io/cilium/operator-generic:v1.12.2@sha256:00508f78dae5412161fa40ee30069c2802aef20f7bdd20e91423103ba8c0df6e
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/hubble-relay-configmap-checksum: "04d8df56d8d39ccc49c160739215188fadd610e710e3445ccc743cfc04b1f177"
      labels:
        k8s-app: hubble-relay
    spec:
      containers:
        - name: hubble-relay
          image: "quay.io/cilium/hubble-relay:v1.12.2@sha256:6f3496c28f23542f2645d614c0a9e79e3b0ae2732080da794db41c33e4379e5c"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName:
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: ca.crt
                  path: hubble-server-ca.crt
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/hubble-ui-nginx-configmap-checksum: "c7f0d2cfca5909a7fbb6128aee6bcf1f73a8c7577509a0b548ca3b4ace2b1888"
      labels:
        k8s-app: hubble-ui
    spec:
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      priorityClassName:
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.9.2@sha256:d3596efc94a41c6b772b9afe6fe47c17417658956e04c3e2a28d293f2670663e"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        volumeMounts:
          - name: hubble-ui-nginx-conf
            mountPath: /etc/nginx/conf.d/default.conf
            subPath: nginx.conf
          - name: tmp-dir
            mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.9.2@sha256:a3ac4d5b87889c9f7cc6323e86d3126b0d382933bd64f44382a92778b0cde5d7"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
        terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
