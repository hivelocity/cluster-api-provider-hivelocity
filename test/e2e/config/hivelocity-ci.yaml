---
# CI E2E test test configuration scenario using locally build images and manifests for:
# - cluster-api
# - bootstrap kubeadm
# - control-plane kubeadm
# - hivelocity

# For creating local dev images run make e2e-image from the main CAPHV repository
images:
  - name: ghcr.io/hivelocity/caphv-staging:${TAG:=e2e}
    loadBehavior: mustLoad
providers:
  - name: cluster-api
    type: CoreProvider
    versions:
      - name: v1.6.0
        value: "https://github.com/kubernetes-sigs/cluster-api/releases/download/v1.6.0/core-components.yaml"
        type: "url"
        contract: v1beta1
        files:
          - sourcePath: "../data/shared/v1alpha1/metadata.yaml"
        replacements:
          - old: "imagePullPolicy: Always"
            new: "imagePullPolicy: IfNotPresent"
          - old: "--enable-leader-election"
            new: "--enable-leader-election=false"
          - old: --metrics-addr=127.0.0.1:8080
            new: --metrics-addr=:8080

  - name: kubeadm
    type: BootstrapProvider
    versions:
      - name: v1.6.0
        value: "https://github.com/kubernetes-sigs/cluster-api/releases/download/v1.6.0/bootstrap-components.yaml"
        type: "url"
        contract: "v1beta1"
        files:
          - sourcePath: "../data/shared/v1alpha1/metadata.yaml"
        replacements:
          - old: "imagePullPolicy: Always"
            new: "imagePullPolicy: IfNotPresent"
          - old: "--enable-leader-election"
            new: "--enable-leader-election=false"
          - old: --metrics-addr=127.0.0.1:8080
            new: --metrics-addr=:8080
          - old: --metrics-addr=127.0.0.1:8080
            new: --metrics-addr=:8080

  - name: kubeadm
    type: ControlPlaneProvider
    versions:
      - name: v1.6.0
        value: "https://github.com/kubernetes-sigs/cluster-api/releases/download/v1.6.0/control-plane-components.yaml"
        type: "url"
        files:
          - sourcePath: "../data/shared/v1alpha1/metadata.yaml"
        replacements:
          - old: "imagePullPolicy: Always"
            new: "imagePullPolicy: IfNotPresent"
          - old: "--enable-leader-election"
            new: "--enable-leader-election=false"
          - old: --metrics-addr=127.0.0.1:8080
            new: --metrics-addr=:8080

  - name: hivelocity
    type: InfrastructureProvider
    versions:
      # disabled, until we have the first released version
      # - name: ${CAPHV_LATEST_VERSION:-} # latest published release
      #   value: https://github.com/hivelocity/cluster-api-provider-hivelocity/releases/download/${CAPHV_LATEST_VERSION:-}/infrastructure-components.yaml
      #   type: "url"
      #   contract: v1beta1
      #   files:
      #     - sourcePath: "${MANIFEST_PATH:=..}/metadata.yaml"
      #     - sourcePath: "../data/infrastructure-hivelocity/v1alpha1/cluster-template.yaml"
      - name: v1.0.99 # next; use manifest from source files
        value: "${MANIFEST_PATH:=..}/infrastructure-components.yaml"
        type: "url"
        contract: v1beta1
        files:
          - sourcePath: "${MANIFEST_PATH:=..}/metadata.yaml"
          - sourcePath: "../data/infrastructure-hivelocity/v1alpha1/cluster-template.yaml"

variables:
  # Upgrade Test
  KUBERNETES_VERSION_MANAGEMENT: "v1.28.6"
  KUBERNETES_VERSION: "${KUBERNETES_VERSION:-v1.28.6}"
  KUBERNETES_VERSION_UPGRADE_FROM: "v1.27.8"
  KUBERNETES_VERSION_UPGRADE_TO: "v1.28.6"
  CONTROL_PLANE_MACHINE_TEMPLATE_UPGRADE_TO: "k8s-upgrade-control-plane"
  WORKERS_MACHINE_TEMPLATE_UPGRADE_TO: "k8s-upgrade-worker"
  KUBERNETES_IMAGE_UPGRADE_FROM: ${KUBERNETES_IMAGE_UPGRADE_FROM:-}
  KUBERNETES_IMAGE_UPGRADE_TO: ${KUBERNETES_IMAGE_UPGRADE_TO:-}
  ETCD_VERSION_UPGRADE_TO: "3.5.9-0"
  COREDNS_VERSION_UPGRADE_TO: "v1.10.1"
  IP_FAMILY: "IPv4"

  # NOTE: INIT_WITH_BINARY and INIT_WITH_KUBERNETES_VERSION are only used by the clusterctl upgrade test to initialize
  # the management cluster to be upgraded.
  INIT_WITH_BINARY: "https://github.com/kubernetes-sigs/cluster-api/releases/download/v1.6.0/clusterctl-linux-amd64"
  INIT_WITH_PROVIDERS_CONTRACT: "v1beta1"
  INIT_WITH_KUBERNETES_VERSION: "v1.28.6"
  INIT_WITH_INFRASTRUCTURE_PROVIDER_VERSION: ${CAPHV_LATEST_VERSION:-}

  # Cluster Addons
  CILIUM: "./data/cni/cilium/cilium.yaml"
  CCM: "./data/ccm/hivelocity-ccm.yaml"

  # Conformance testing variables
  CONFORMANCE_WORKER_MACHINE_COUNT: 3
  CONFORMANCE_CONTROL_PLANE_MACHINE_COUNT: 3
  KUBETEST_CONFIGURATION: "${KUBETEST_CONF_PATH:=./data/kubetest/conformance.yaml}"
  NODE_DRAIN_TIMEOUT: "60s"

  # Enabling the feature flags by setting the env variables.
  EXP_CLUSTER_RESOURCE_SET: "true"
  CLUSTER_TOPOLOGY: "true"

  # Provider Variables
  HIVELOCITY_API_KEY: "admin123"
  HIVELOCITY_SSH_PUB: "secret"
  HIVELOCITY_REGION: LAX2
  HIVELOCITY_CONTROL_PLANE_MACHINE_TYPE: e2eControlPlane
  HIVELOCITY_WORKER_MACHINE_TYPE: e2eWorker
  REDACT_LOG_SCRIPT: "../../hack/log/redact.sh"

intervals:
  default/wait-controllers: ["8m", "10s"] ## wait until initBootstrapCluster has finished.
  default/wait-cluster: ["5m", "10s"] ## wait until Infrastructure == ready and ControlPlaneEndpoint is valid
  default/wait-control-plane: ["29m", "10s"] ## wait until first control plane is ready.
  default/wait-worker-nodes: ["29m", "10s"] ## wait until all workers are ready from the moment when the control plane is ready
  default/wait-delete-cluster: ["5m", "10s"] ## wait until cluster is deleted
