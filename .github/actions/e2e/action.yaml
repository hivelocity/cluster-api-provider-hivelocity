name: "E2E Test"
description: "Runs the e2e test"
inputs:
  e2e_name:
    description: "e2e_name"
    required: true
  e2e_make_target:
    description: "e2e_make_target"
    required: true
  e2e_hivelocity_api_key:
    description: "e2e_hivelocity_api_key"
    required: true
  e2e_ssh_pub:
    description: "e2e_ssh_pub"
    required: false
runs:
  using: "composite"
  steps:
    - uses: ./.github/actions/setup-go
    - uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3.3.2
      with:
        path: hack/tools/bin
        key: ${{ runner.os }}-tools-bin-e2e-${{ hashFiles('Makefile') }}
        restore-keys: |
          ${{ runner.os }}-tools-bin-e2e-
          ${{ runner.os }}-tools-bin-
    - name: Download artifact
      uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3
      with:
        name: test-release
        path: out

    - name: Generate metadata
      id: meta
      uses: ./.github/actions/metadata
      with:
        metadata_flavor: ${{ env.metadata_flavor }}
        metadata_tags: ${{ env.metadata_tags }}

    - name: Prepull the pre-built image
      shell: bash
      run: docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${TAG}
      env:
        TAG: ${{ steps.meta.outputs.version }}

    - name: "e2e-${{ inputs.e2e_name }}"
      shell: bash
      env:
        CI: "true"
        REGISTRY: ${{ env.REGISTRY }}
        IMAGE_NAME: ${{ env.IMAGE_NAME }}
        TAG: ${{ steps.meta.outputs.version }}
        E2E_CONF_FILE_SOURCE: "${{ github.workspace }}/test/e2e/config/hivelocity-ci.yaml"
        MANIFEST_PATH: "../../../out"
        HIVELOCITY_API_KEY: ${{ env.HIVELOCITY_API_KEY }}
        HIVELOCITY_SSH_PUB: ${{ inputs.e2e_ssh_pub }}
        SKIP_IMAGE_BUILD: "1"
        CAPHV_LATEST_VERSION: "v1.0.0-alpha.1"
      run: make ${{ inputs.e2e_make_target }}
    - name: Upload artifact
      uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3
      if: ${{ always() }}
      with:
        name: e2e-${{ inputs.e2e_name }}
        path: _artifacts
